openapi: 3.0.3
info:
  title: Bill Tracka Api Documention
  description: |
    # Bill Tracka
      Api to issue and handle invoices
  version: 1.0.0

servers:
  - url: 'https://billtracka.jojothomas.tech/api'
    description: Online server
  - url: 'http://localhost:5000/api'
    description: Local server


tags:
  - name: Authentication
    description: "Every thing related to signup, login, and verifying user"
  - name: Invoice
    description: "Every thing related to invoices"
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      description: "create a user now"
      requestBody:
        $ref: './user.yaml#/components/requestBodies/CreateUser'
      responses:
        201:
          description: "Successfully creates user"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                properties:

                  status:
                    type: number
                    example: 401,
                  message:
                    type: string
                    example: "Email already exists"

  #  invoice routes starts here
  /invoice/{invoice_id}:
    get:
      tags:
        - Invoice
      description: "Get a single invoice"
      parameters:
        - name: invoice_id
          in: path
          required: true
          description: "The invoice id"
          schema:
            type: string
      responses:
        200:
          $ref: './invoice.yaml#/components/responses/singleInvoice'

  /invoice:
    get:
      tags:
        - Invoice
      description: "Get all invoice associated with logged in user"
      responses:
        200:
          $ref: "./invoice.yaml#/components/responses/multipleInvoices"
    post:

      tags:
        - Invoice
      requestBody:
        $ref: "./invoice.yaml#/components/requestBodies/createInvoice"
      responses:
        201:
          $ref: "./invoice.yaml#/components/responses/singleInvoice"




components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
